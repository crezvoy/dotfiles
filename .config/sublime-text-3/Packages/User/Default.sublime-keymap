[
{ "keys": ["h"], "command": "move", "args": {"by": "characters", "forward": false}, "context":
[ {"key": "control", "operand": "sidebar_tree"} ] },
{ "keys": ["j"], "command": "move", "args": {"by": "lines", "forward": true}, "context":
[ {"key": "control", "operand": "sidebar_tree"} ] },
{ "keys": ["k"], "command": "move", "args": {"by": "lines", "forward": false}, "context":
[ {"key": "control", "operand": "sidebar_tree"} ] },
{ "keys": ["l"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
[ {"key": "control", "operand": "sidebar_tree"} ] },

{ "keys": ["j", "j"], "command": "vim_press_key",
  "args": {
    "key": "<Esc>"
  },
  "context": [
    { "key": "vi_insert_mode_aware", "operand": true }
  ]
},
{ "keys": ["g", "q"], "command": "wrap_lines_plus",
"context":
[
{ "key": "setting.command_mode", "operand": true },
{ "key": "setting.is_widget", "operand": false }
]
},
{ "keys": ["ctrl+shift+h"], "command": "reveal_in_side_bar"},
{ "keys": ["ctrl+shift+r"], "command": "goto_symbol_in_project" },
{ "keys": ["ctrl+p"],
  "command": "show_overlay",
  "args": {
    "overlay": "goto",
    "show_files": true,
  }
},
{ "keys": ["ctrl+shift+p"],
  "command": "show_overlay",
  "args": {
    "overlay": "command_palette",
    "show_files": false,
  }
},
{ 
  "keys": ["ctrl+shift+b"],
  "command": "show_panel", 
  "args": {
    "panel": "output.exec"
  }
},
{ "keys": ["alt+l"], "command": "next_view" },
{ "keys": ["alt+h"], "command": "prev_view" },
{ "keys": ["ctrl+]"], "command": "goto_definition",
"context":
[
{ "key": "setting.command_mode", "operand": true },
{ "key": "setting.is_widget", "operand": false }
]
},

// note keybinding
{ "keys": ["f1"], "command": "jotter" },
{ "keys": ["shift+f1"], "command": "notes_buffer" },
// Notes: Index keymaps
{ "keys": ["enter"], "command": "notes_buffer_open", "context":
  [{ "key": "selector", "operator": "equal", "operand": "text.notes_buffer" }]
},
{ "keys": ["enter"], "command": "note_open_url", "context":
  [{ "key": "selector", "operator": "equal", "operand": "text.html.markdown.note meta.link.inline.markdown | text.html.markdown.note meta.link.inet.markdown | text.html.markdown.note meta.link.reference.def.markdown" }]
},
{ "keys": ["enter"], "command": "note_preview_image", "context":
  [{ "key": "selector", "operator": "equal", "operand": "text.html.markdown.note meta.image.inline.markdown" }]
},
// Notes: Jotter keymaps
{ "keys": ["escape"], "command": "save_jot_and_hide_panel", "context":
  [
    { "key": "panel_visible", "operator": "equal", "operand": true },
    { "key": "panel", "operator": "equal", "operand": "output.jotter" }
  ]
},
// Note Extra Features: TODO and HEADING FOLDING
{ "keys": ["tab"], "command": "note_smart_folding", "context":
  [{ "key": "selector", "operator": "equal", "operand": "(markup.heading.1.markdown.note | markup.heading.2.markdown.note | markup.heading.3.markdown.note| markup.heading.4.markdown.note| markup.heading.5.markdown.note| markup.heading.6.markdown.note)" }]
},
{ "keys": ["shift+tab"], "command": "note_global_folding", "context":
  [{ "key": "selector", "operator": "equal", "operand": "text.html.markdown.note" } ]
},
{ "keys": ["ctrl+enter"], "command": "note_smart_new_line", "context":
  [{ "key": "selector", "operator": "equal", "operand": "(markup.heading.1.markdown.note | markup.heading.2.markdown.note | markup.heading.3.markdown.note| markup.heading.4.markdown.note| markup.heading.5.markdown.note| markup.heading.6.markdown.note)" } ]
},
{ "keys": ["super+enter"],  "command": "note_todo_pending", "context":
  [{ "key": "selector", "operator": "equal", "operand": "text.html.markdown.note" }]
},
{ "keys": ["super+d"],  "command": "note_todo_done", "context":
  [{ "key": "selector", "operator": "equal", "operand": "markup.list.unnumbered.todo.markdown" }]
},
{ "keys": ["control+c"],  "command": "note_todo_cancel", "context":
  [{ "key": "selector", "operator": "equal", "operand": "markup.list.unnumbered.todo.markdown" }]
},
{ "keys": ["ctrl+shift+/"], "command": "insert_date", "args": {"format": "%Y-%m-%d %H:%M:%S", "tz_out": "Europe/Paris"} }
]
